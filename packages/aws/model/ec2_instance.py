# encoding: utf-8

class Table(object):
    def config_db(self,pkg):
        tbl =  pkg.table('ec2_instance',pkey='id',name_long='ec2_instance',name_plural='ec2_instance',caption_field='id')
        self.sysFields(tbl)
        tbl.column('monitoring',dtype='X',name_long='Monitoring',aws_name='Monitoring')
        tbl.column('publicdnsname',name_long='Public Dns Name',aws_name='PublicDnsName')
        tbl.column('statereason',dtype='X',name_long='State Reason',aws_name='StateReason')
        tbl.column('state',dtype='X',name_long='State',aws_name='State')
        tbl.column('ebsoptimized',dtype='B',name_long='Ebs Optimized',aws_name='EbsOptimized')
        tbl.column('launchtime',dtype='DH',name_long='Launch Time',aws_name='LaunchTime')
        tbl.column('publicipaddress',name_long='Public Ip Address',aws_name='PublicIpAddress')
        tbl.column('privateipaddress',name_long='Private Ip Address',aws_name='PrivateIpAddress')
        tbl.column('productcodes',name_long='Product Codes',aws_name='ProductCodes')
        tbl.column('vpcid',name_long='Vpc Id',aws_name='VpcId')
        tbl.column('cpuoptions',dtype='X',name_long='Cpu Options',aws_name='CpuOptions')
        tbl.column('statetransitionreason',name_long='State Transition Reason',aws_name='StateTransitionReason')
        tbl.column('instanceid',name_long='Instance Id',aws_name='InstanceId')
        tbl.column('enasupport',dtype='B',name_long='Ena Support',aws_name='EnaSupport')
        tbl.column('imageid',name_long='Image Id',aws_name='ImageId')
        tbl.column('privatednsname',name_long='Private Dns Name',aws_name='PrivateDnsName')
        tbl.column('keyname',name_long='Key Name',aws_name='KeyName')
        tbl.column('securitygroups',dtype='X',name_long='Security Groups',aws_name='SecurityGroups')
        tbl.column('clienttoken',name_long='Client Token',aws_name='ClientToken')
        tbl.column('subnetid',name_long='Subnet Id',aws_name='SubnetId')
        tbl.column('instancetype',name_long='Instance Type',aws_name='InstanceType')
        tbl.column('networkinterfaces',dtype='X',name_long='Network Interfaces',aws_name='NetworkInterfaces')
        tbl.column('sourcedestcheck',dtype='B',name_long='Source Dest Check',aws_name='SourceDestCheck')
        tbl.column('placement',dtype='X',name_long='Placement',aws_name='Placement')
        tbl.column('hypervisor',name_long='Hypervisor',aws_name='Hypervisor')
        tbl.column('blockdevicemappings',dtype='X',name_long='Block Device Mappings',aws_name='BlockDeviceMappings')
        tbl.column('architecture',name_long='Architecture',aws_name='Architecture')
        tbl.column('rootdevicetype',name_long='Root Device Type',aws_name='RootDeviceType')
        tbl.column('rootdevicename',name_long='Root Device Name',aws_name='RootDeviceName')
        tbl.column('virtualizationtype',name_long='Virtualization Type',aws_name='VirtualizationType')
        tbl.column('tags',dtype='X',name_long='Tags',aws_name='Tags')
        tbl.column('amilaunchindex',dtype='L',name_long='Ami Launch Index',aws_name='AmiLaunchIndex')
